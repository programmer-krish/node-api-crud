{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swivel Assignment for the Employee CRUD",
    "description": "Employee Node Backend API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "employee-crud-node-api.herokuapp.com/api",
  "basePath": "/",
  "tags": [
    {
      "name": "Employee",
      "description": "API for Employee"
    }
  ],
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/get/employee": {
      "get": {
        "tags": ["Employee"],
        "description": "Get all employees",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Employee Get Success"
          }
        }
      }
    },
    "/post/employee": {
      "post": {
        "tags": ["Employee"],
        "description": "Post request for the employees",
        "parameters": [
          {
            "name": "employee",
            "in": "body",
            "description": "Create Employee",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User Successfully Created"
          }
        }
      }
    },
    "/getSpecificId/{empId}": {
      "parameters": [
        {
          "name": "empId",
          "in": "path",
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Employee"],
        "description": "Get specific employees",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Employee Get Success"
          }
        }
      }
    },
    "/update/{empId}": {
      "parameters": [
        {
          "name": "empId",
          "in": "path",
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "put": {
        "tags": ["Employee"],
        "description": "Post request for the employees",
        "parameters": [
          {
            "name": "employee",
            "in": "body",
            "description": "Create Employee",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User Successfully Updated"
          }
        }
      }
    },
    "/delete/{empId}": {
      "parameters": [
        {
          "name": "empId",
          "in": "path",
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "delete": {
        "tags": ["Employee"],
        "description": "Get all employees",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Employee Deleted Successfully"
          }
        }
      }
    }
  },
  "definitions": {
    "Employee": {
      "required": [
        "first_name",
        "last_name",
        "email",
        "number",
        "gender",
        "photo"
      ],
      "properties": {
        "first_name": {
          "type": "string",
          "uniqueItems": true
        },
        "last_name": {
          "type": "string",
          "uniqueItems": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "number": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "photo": {
          "type": "string"
        }
      }
    }
  }
}
